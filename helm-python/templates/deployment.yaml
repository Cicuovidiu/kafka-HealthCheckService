apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
      imagePullSecrets:
      - name: {{ .Values.image.imagePullSecret }}
        ports:
        - containerPort: 5000
        volumeMounts:
        - name: config-volume
          mountPath: /tmp/client.properties
          subPath: client.properties 
        env:
        - name: KAFKA_BROKER
          value: {{ .Values.kafka.broker }}
        - name: KAFKA_TOPIC
          value: {{ .Values.kafka.topic }}
        - name: BOOTSTRAP_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.name }}
              key: {{ .Values.secret.user }}
        - name: BOOTSTRAP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.name }}
              key: {{ .Values.secret.password }}
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
      volumes:
      - name: config-volume
        configMap:
          name: client-configure-cm
          items:
          - key: test.properties
            path: client.properties